apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: dgraph-zero-deployment
  annotations:
    description: "Dgraph Zero"
    openshift.io/display-name: "Dgraph Zero"
    version: 0.1.0
    tags: dgraph,zero,thoth,ai-stacks
    template.openshift.io/documentation-url: https://github.com/Thoth-Station/
    template.openshift.io/long-description: "This is an OpenShift Template to deploy Dgraph Zeros"
    template.openshift.io/provider-display-name: "Red Hat, Inc."
  labels:
    template: dgraph-zero-deployment
    app: dgraph
    component: zero

objects:
  - apiVersion: v1
    kind: Service
    metadata:
      name: dgraph-zero-public
      labels:
        app: dgraph
        component: zero
    spec:
      type: LoadBalancer
      ports:
        - port: 5080
          targetPort: 5080
          name: zero-grpc
        - port: 6080
          targetPort: 6080
          name: zero-http
      selector:
        app: dgraph
        component: zero

  - apiVersion: v1
    kind: Service
    metadata:
      name: dgraph-zero
      labels:
        app: dgraph
        component: zero
    spec:
      ports:
        - port: 5080
          targetPort: 5080
          name: zero-grpc
      clusterIP: None
      selector:
        app: dgraph
        component: zero

  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: dgraph-zero
      labels:
        app: dgraph
        component: zero
    spec:
      serviceName: "dgraph-zero"
      replicas: 3
      selector:
        matchLabels:
          app: dgraph
          component: zero
      template:
        metadata:
          labels:
            app: dgraph
            component: zero
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app
                      operator: In
                      values:
                      - dgraph-zero
                  topologyKey: kubernetes.io/hostname
          containers:
          - name: zero
            image: dgraph
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 5080
                name: zero-grpc
              - containerPort: 6080
                name: zero-http
            volumeMounts:
              - name: datadir
                mountPath: /dgraph
            env:
              - name: POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            command:
              - bash
              - "-c"
              - |
                set -ex
                [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
                ordinal=${BASH_REMATCH[1]}
                idx=$(($ordinal + 1))
                if [[ $ordinal -eq 0 ]]; then
                  dgraph zero --my=$(hostname -f):5080 --idx $idx --replicas 3
                else
                  dgraph zero --my=$(hostname -f):5080 --peer dgraph-zero-0.dgraph-zero.${POD_NAMESPACE}.svc.cluster.local:5080 --idx $idx --replicas 3
                fi
            resources:
              limits:
                cpu: 750m
                memory: 1024Mi
              requests:
                cpu: 750m
                memory: 1024Mi
          terminationGracePeriodSeconds: 60
          volumes:
          - name: datadir
            persistentVolumeClaim:
              claimName: datadir
      updateStrategy:
        type: RollingUpdate
      volumeClaimTemplates:
        - metadata:
            name: datadir
            annotations:
              volume.alpha.kubernetes.io/storage-class: anything # ceph-dyn-thoth-paas-prod-psi
              # volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/rbd
          spec:
            accessModes:
              - "ReadWriteOnce"
            resources:
              requests:
                storage: 5Gi
